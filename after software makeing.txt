1. Domain knowledge - Must understand the business.
2. Business - Is it possible to convert any part of the business into software or web application? (point out)
4. Profit-loss Calculation - how much money will be profit or loss, if this software is implemented by that company.
5. How many employees are getting fired due to software implementation, how can I work with 10 people due to the implementation of software, which used to be done with 20 people, the software will have to be implemented.
6. Business corruption should be eliminated.
7. Software wrong side-effects - I have to keep an eye on that so that there is no remote policy in my software.
8. Employee work speed is increasing due to software implementation
9. Maintenance Const Calculation - how much profit is made after making the software and how much money is required for maintenance. Profit should be high and maintenance costs should be low.
10. User Acceptance Test (UAT) - Test whether the user will accept the software well or not.
11. User Experience Analysis (UEA) - Can users use my software?
12. Future Prediction - my software has one system in January and it is in other systems in June.

If I ask for 1 month for recurrence analysis, the client will move to another developer. Then:
=> teach my client a good understand.  **You must be a good motivator**.

If you get software from other places, if they work without the requirements analyzed, then your business may suffer.
If you take the software from me, your staff layoffs, work speed, and corruption will be reduced.

If you make a profit with my software, then the value of my software will increase, and if my software value increases and my value in the software or web application industry will increase.
For that, it is necessary to analyze the requirements to make successful business software.

After this, if the client does not agree, then you have to work overtime for requirements analysis for yourself and your career.